Перем ИдентификаторПродавца;
Перем СекретныйКлюч;
Перем AWSКлюч;
Перем MWSКлюч;

Процедура ПриСозданииОбъекта(пИдентификаторПродавца, пСекретныйКлюч, пAWSКлюч, пMWSКлюч = "")
	
	ИдентификаторПродавца = пИдентификаторПродавца;
	СекретныйКлюч = пСекретныйКлюч;
	AWSКлюч = пAWSКлюч;
	MWSКлюч = пMWSКлюч;
	
КонецПроцедуры

Функция ЗапроситьСписокТоваровПоПлощадке(Знач Площадка, Знач ВидОтчета = Неопределено) Экспорт
	
	Раздел = "Reports";
	Действие = "RequestReport";
	Версия = "2009-01-01";
	Если ВидОтчета = Неопределено Тогда
		ВидОтчета = ТипыОтчетовAmazon.ТоварыАктивныйСписок;
	КонецЕсли;
	
	Возврат ЗапроситьОтчет(Площадка.АдресСервера, Площадка.Идентификатор, Раздел, Действие, Версия, ВидОтчета);
	
КонецФункции

Функция ПолучитьИдентификаторОтчета(Площадка, КодОтчета) Экспорт
	
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("ReportRequestIdList.Id.1", КодОтчета);
	ПараметрыЗапроса.Вставить("ReportProcessingStatusList.Status.1", "_DONE_");
	ПараметрыЗапроса.Вставить("ReportProcessingStatusList.Status.2", "_DONE_NO_DATA_");
	
	Раздел = "Reports";
	Действие = "GetReportRequestList";
	Версия = "2009-01-01";
	
	Ответ = КонструкторHTTPЗапроса(Площадка.АдресСервера, "POST", ПараметрыЗапроса, Раздел, Действие, Версия);
	
	Если Ответ.КодСостояния = 200 Тогда
		
		Текст = Ответ.ПолучитьТелоКакСтроку();
		Регулярка = Новый РегулярноеВыражение("<GeneratedReportId>(.*)<\/GeneratedReportId>");
		Регулярка.Многострочный = Истина;
		
		РезультатРВ = Регулярка.НайтиСовпадения(Текст);
		Для Каждого Элемент Из РезультатРВ Цикл
			Результат = Элемент.Группы[1].Значение;
			Прервать;
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьСодержимоеОтчета(Площадка, ИдентификаторОтчета) Экспорт
	
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("ReportId", ИдентификаторОтчета);
	
	Раздел = "Reports";
	Действие = "GetReport";
	Версия = "2009-01-01";
	
	Ответ = КонструкторHTTPЗапроса(Площадка.АдресСервера, "POST", ПараметрыЗапроса, Раздел, Действие, Версия);
	Если Ответ.КодСостояния = 200 Тогда
		
		Результат = Ответ.ПолучитьТелоКакСтроку("ISO-8859-1");
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ЗапроситьОтчет(ТочкаВхода, ИдентификаторПлощадки, Раздел, Действие, Версия, ВидОтчета) Экспорт
	
	Перем Результат;
	
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("ReportType", ВидОтчета);
	ПараметрыЗапроса.Вставить("MarketplaceIdList.Id.1", ИдентификаторПлощадки);
	Ответ = КонструкторHTTPЗапроса(ТочкаВхода, "POST", ПараметрыЗапроса, Раздел, Действие, Версия);
	
	Если Ответ.КодСостояния = 200 Тогда
		
		Текст = Ответ.ПолучитьТелоКакСтроку();
		Регулярка = Новый РегулярноеВыражение("<ReportRequestId>(.*)<\/ReportRequestId>");
		Регулярка.Многострочный = Истина;
		
		РезультатРВ = Регулярка.НайтиСовпадения(Текст);
		Для Каждого Элемент Из РезультатРВ Цикл
			Результат = Элемент.Группы[1].Значение;
			Прервать;
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция КонструкторHTTPЗапроса(Сервер, Метод, ДополнительныеПараметры, Раздел, Действие, Версия)
	
	ДанныеАвторизации = Новый Структура();
	ДанныеАвторизации.Вставить("ИдентификаторПродавца", ИдентификаторПродавца);
	ДанныеАвторизации.Вставить("СекретныйКлюч", СекретныйКлюч);
	ДанныеАвторизации.Вставить("AWSКлюч", AWSКлюч);
	ДанныеАвторизации.Вставить("MWSКлюч", MWSКлюч);
	
	Возврат МодульОбщегоНазначения.КонструкторHTTPЗапроса(
		ДанныеАвторизации,
		Сервер,
		Метод,
		ДополнительныеПараметры,
		Раздел,
		Действие,
		Версия);
	
КонецФункции

ИдентификаторПродавца = "";
СекретныйКлюч = "";
AWSКлюч = "";
MWSКлюч = "";
