#Использовать 1commands
#Использовать crypto
#Использовать fluent
Процедура СделатьПаузу(Знач Секунд = 1) Экспорт
	
	Команда = Новый Команда;
	СтрокаЗапроса = "ping -n 1 -w " + Формат(1000 * Секунд, "ЧДЦ=0; ЧГ=") + " 127.255.255.255";
	Команда.УстановитьКоманду(СтрокаЗапроса);
	Команда.Исполнить();
	
КонецПроцедуры

Функция ТаблицаЗначенийТзТекста(Знач ВходящиеДанные) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ВходящиеДанные);
	
	// обработаем шапку
	ПерваяСтрока = ТекстовыйДокумент.ПолучитьСтроку(1);
	КоллекцияЭлементов = СтрРазделить(ПерваяСтрока, Символы.Таб);
	КоллекцияКолонок = Новый Массив;
	Для Каждого ЭлементКоллекции Из КоллекцияЭлементов Цикл
		Значение = СтрЗаменить(ЭлементКоллекции, "-", "_");
		Таблица.Колонки.Добавить(Значение);
		КоллекцияКолонок.Добавить(Значение);
	КонецЦикла;
	
	// прочитаем другие строки
	Для НомерСтроки = 2 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		НоваяСтрока = Таблица.Добавить();
		
		ТекущаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		КоллекцияЭлементов = СтрРазделить(ТекущаяСтрока, Символы.Таб);
		Порядок = 0;
		Для Каждого Значение Из КоллекцияЭлементов Цикл
			
			НоваяСтрока[КоллекцияКолонок[Порядок]] = Значение;
			
			Порядок = Порядок + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

Функция HMACSHA256(СекретныйКлюч, Данные) Экспорт
	
	Хэш = Шифрование.HMAC(
			GetBinaryDataFromString(СекретныйКлюч),
			GetBinaryDataFromString(Данные),
			HashFunction.SHA256);
	
	Возврат Base64Строка(Хэш);
	
КонецФункции

Функция КонструкторHTTPЗапроса(
		ДанныеАвторизации,
		Сервер,
		Метод,
		ДополнительныеПараметры,
		Раздел,
		Действие,
		Версия) Экспорт
	
	ДатаЗапроса = ТекущаяДата() - (7 * 60 * 60);
	ПутьНаСервисе = "/" + Раздел + "/" + Версия;
	
	ПараметрыЗапроса = Новый Соответствие();
	ПараметрыЗапроса.Вставить("AWSAccessKeyId", ДанныеАвторизации.AWSКлюч);
	ПараметрыЗапроса.Вставить("Action", Действие);
	ПараметрыЗапроса.Вставить("Merchant", ДанныеАвторизации.ИдентификаторПродавца);
	ПараметрыЗапроса.Вставить("SignatureMethod", "HmacSHA256");
	ПараметрыЗапроса.Вставить("SignatureVersion", "2");
	ПараметрыЗапроса.Вставить("Timestamp", XmlСтрока(ДатаЗапроса) + "Z");
	ПараметрыЗапроса.Вставить("Version", "2009-01-01");
	
	ДополнительПараметрыЗапроса(ПараметрыЗапроса, ДополнительныеПараметры);
	
	КоллекцияПараметров = ОтсортироватьСоответствиеПоКлючам(ПараметрыЗапроса);
	
	СтрокаЗапроса = СформироватьСтрокуЗапроса(КоллекцияПараметров);
	СтрокаНаПодпись = СформироватьСтрокуНаПодпись(Сервер, Метод, ПутьНаСервисе, СтрокаЗапроса);
	СигнатураДанных = HMACSHA256(ДанныеАвторизации.СекретныйКлюч, СтрокаНаПодпись);
	
	Соединение = Новый HTTPСоединение("https://" + Сервер);
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Host", Сервер);
	Заголовки.Вставить("x-amazon-user-agent", "AmazonJavascriptScratchpad/1.0 (Language=Javascript)");
	Заголовки.Вставить("Content-Type", "text/xml");
	
	Адрес = ПутьНаСервисе
		+ "?" + СтрокаЗапроса
		+ "&Signature=" + КодироватьСтроку(СигнатураДанных, СпособКодированияСтроки.КодировкаURL);
	Запрос = Новый HTTPЗапрос(Адрес, Заголовки);
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	
	Возврат Ответ;
	
КонецФункции

Процедура ДополнительПараметрыЗапроса(Приемник, Источник)
	
	Для Каждого КлючЗначение Из Источник Цикл
		Приемник.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

Функция ОтсортироватьСоответствиеПоКлючам(Знач ВходящееЗначение)
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("ИмяПараметра");
	Таблица.Колонки.Добавить("Значение");
	
	Для Каждого КлючЗначение Из ВходящееЗначение Цикл
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.ИмяПараметра = КлючЗначение.Ключ;
		НоваяСтрока.Значение = КлючЗначение.Значение;
	КонецЦикла;
	
	ПроцессорКоллекций = ПроцессорыКоллекций.ИзКоллекции(Таблица);
	СортироватьПоИмени = ОписанияОповещений.Создать("Обработчик_СортировкаПоИмениПараметров", ЭтотОбъект);
	Результат = ПроцессорКоллекций
		.Сортировать(СортироватьПоИмени)
		.Получить(Тип("ТаблицаЗначений"));
	
	Возврат Результат;
	
КонецФункции

Процедура Обработчик_СортировкаПоИмениПараметров(РезультатСравнения, ДополнительныеПараметры) Экспорт
	РезультатСравнения = СравнитьСУсчетомРегистра(
			ДополнительныеПараметры.Элемент1.ИмяПараметра,
			ДополнительныеПараметры.Элемент2.ИмяПараметра) > 0;
КонецПроцедуры

Функция СравнитьСУсчетомРегистра(Знач СтрокаА, Знач СтрокаБ)
	
	Результат = 0;
	
	МаксимальноеКоличествоСимволов = Макс(СтрДлина(СтрокаА), СтрДлина(СтрокаБ));
	Для НомерСимвола = 1 По МаксимальноеКоличествоСимволов Цикл
		
		КодА = КодСимвола(Сред(СтрокаА, НомерСимвола, 1));
		КодБ = КодСимвола(Сред(СтрокаБ, НомерСимвола, 1));
		
		Если КодА = КодБ Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = ?(КодА > КодБ, 1, - 1);
		Прервать;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьСтрокуЗапроса(КоллекцияПараметров)
	
	СтрокаЗапроса = "";
	Для Каждого Элемент Из КоллекцияПараметров Цикл
		СтрокаЗапроса = СтрокаЗапроса
			+ ?(ПустаяСтрока(СтрокаЗапроса), "", "&")
			+ Элемент.ИмяПараметра
			+ "="
			+ КодироватьСтроку(Элемент.Значение, СпособКодированияСтроки.КодировкаURL);
	КонецЦикла;
	
	Возврат СтрокаЗапроса;
	
КонецФункции

Функция СформироватьСтрокуНаПодпись(Сервер, Метод, Адрес, СтрокаЗапроса)
	
	СтрокаНаПодпись =
		Метод + Символы.ПС
		+ Сервер + Символы.ПС
		+ Адрес + Символы.ПС
		+ СтрокаЗапроса;
	
	Возврат СтрокаНаПодпись;
КонецФункции